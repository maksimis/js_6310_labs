'use strict'

function addDarkMode() {
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–æ–Ω–∞
    function toggleDarkMode() {
        const pageWrapper = document.getElementById('page_wrapper');
        const mainSlider = document.querySelector('.main_slider_holder');
        const newsBox = document.querySelector('.news_box');
        if (pageWrapper) {
            const currentBg = pageWrapper.style.backgroundColor;
            
            if (currentBg === 'black' || currentBg === 'rgb(0, 0, 0)') {
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
                pageWrapper.style.backgroundColor = '';
                mainSlider.style.background = '#eee';
                newsBox.style.background = '#eee';
                pageWrapper.style.color = '';
                pageWrapper.style.fontSize = '';
            } else {
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º
                pageWrapper.style.backgroundColor = 'black';
                pageWrapper.style.color = '#9b41d4';
                pageWrapper.style.fontSize = '20px';
                mainSlider.style.background = '#000';

                newsBox.style.background = '#000';
            }
        } else {
            console.log('–≠–ª–µ–º–µ–Ω—Ç —Å id="page_wrapper" –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ DOM
    function createToggleButton() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∏ —É–∂–µ –∫–Ω–æ–ø–∫–∞
        if (document.getElementById('dark-mode-toggle-btn')) {
            console.log('–ö–Ω–æ–ø–∫–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
            return;
        }

        const buttonContainer = document.querySelector('.box_links');
        if (!buttonContainer) {
            console.log('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫');
            return;
        }

        const button = document.createElement('div');
        button.id = 'dark-mode-toggle-btn';
        button.textContent = 'üåô';
        button.title = '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º';
        
        // –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏
        Object.assign(button.style, {
            width: '30px',
            height: '30px',
            border: 'none',
            backgroundColor: '#4285f4',
            color: 'white',
            fontSize: '18px',
            cursor: 'pointer',
            margin: '0 0 0 6px',
            boxShadow: '0 2px 10px rgba(0,0,0,0.3)',
            textAlign: 'center',
            float: 'left'
        });
        
        // –≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        button.addEventListener('mouseenter', () => {
            button.style.transform = 'scale(1.1)';
        });
        
        button.addEventListener('mouseleave', () => {
            button.style.transform = 'scale(1)';
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        button.addEventListener('click', toggleDarkMode);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        buttonContainer.appendChild(button);
        
        console.log('–ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    if (document.readyState === 'loading') {
        console.log('–ö–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏');
        document.addEventListener('DOMContentLoaded', createToggleButton);
    } else {
        console.log('–ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è');
        createToggleButton();
    }
}

addDarkMode();